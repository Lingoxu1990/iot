<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iot.mapper.TableSensorRecordMapper" >
  <resultMap id="BaseResultMap" type="com.iot.pojo.TableSensorRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="record_guid" property="record_guid" jdbcType="VARCHAR" />
    <result column="table_device_guid" property="table_device_guid" jdbcType="VARCHAR" />
    <result column="record_time" property="record_time" jdbcType="VARCHAR" />
    <result column="air_Temperature" property="air_Temperature" jdbcType="VARCHAR" />
    <result column="air_Humidity" property="air_Humidity" jdbcType="VARCHAR" />
    <result column="substrate_Temperature" property="substrate_Temperature" jdbcType="VARCHAR" />
    <result column="substrate_Humidity" property="substrate_Humidity" jdbcType="VARCHAR" />
    <result column="substrate_PH" property="substrate_PH" jdbcType="VARCHAR" />
    <result column="carbon_Dioxide" property="carbon_Dioxide" jdbcType="VARCHAR" />
    <result column="illuminance" property="illuminance" jdbcType="VARCHAR" />
    <result column="substrate_Conductivity" property="substrate_Conductivity" jdbcType="VARCHAR" />
    <result column="ppfd" property="ppfd" jdbcType="VARCHAR" />
    <result column="liquid_PH" property="liquid_PH" jdbcType="VARCHAR" />
    <result column="lai" property="lai" jdbcType="VARCHAR" />
    <result column="liquid_Conductivity" property="liquid_Conductivity" jdbcType="VARCHAR" />
    <result column="liquid_DOC" property="liquid_DOC" jdbcType="VARCHAR" />
    <result column="substrate_DOC" property="substrate_DOC" jdbcType="VARCHAR" />
    <result column="reserve01" property="reserve01" jdbcType="VARCHAR" />
    <result column="reserve02" property="reserve02" jdbcType="VARCHAR" />
    <result column="account_id" property="account_id" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, record_guid, table_device_guid, record_time, air_Temperature, air_Humidity, substrate_Temperature,
    substrate_Humidity, substrate_PH, carbon_Dioxide, illuminance, substrate_Conductivity,
    ppfd, liquid_PH, lai, liquid_Conductivity, liquid_DOC, substrate_DOC, reserve01,
    reserve02, account_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from table_sensor_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from table_sensor_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iot.pojo.TableSensorRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into table_sensor_record (id, record_guid, table_device_guid,
    record_time, air_Temperature, air_Humidity,
    substrate_Temperature, substrate_Humidity,
    substrate_PH, carbon_Dioxide, illuminance,
    substrate_Conductivity, ppfd, liquid_PH,
    lai, liquid_Conductivity, liquid_DOC,
    substrate_DOC, reserve01, reserve02,
    account_id)
    values (#{id,jdbcType=VARCHAR}, #{record_guid,jdbcType=VARCHAR}, #{table_device_guid,jdbcType=VARCHAR},
    #{record_time,jdbcType=VARCHAR}, #{air_Temperature,jdbcType=VARCHAR}, #{air_Humidity,jdbcType=VARCHAR},
    #{substrate_Temperature,jdbcType=VARCHAR}, #{substrate_Humidity,jdbcType=VARCHAR},
    #{substrate_PH,jdbcType=VARCHAR}, #{carbon_Dioxide,jdbcType=VARCHAR}, #{illuminance,jdbcType=VARCHAR},
    #{substrate_Conductivity,jdbcType=VARCHAR}, #{ppfd,jdbcType=VARCHAR}, #{liquid_PH,jdbcType=VARCHAR},
    #{lai,jdbcType=VARCHAR}, #{liquid_Conductivity,jdbcType=VARCHAR}, #{liquid_DOC,jdbcType=VARCHAR},
    #{substrate_DOC,jdbcType=VARCHAR}, #{reserve01,jdbcType=VARCHAR}, #{reserve02,jdbcType=VARCHAR},
    #{account_id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iot.pojo.TableSensorRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into table_sensor_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="record_guid != null" >
        record_guid,
      </if>
      <if test="table_device_guid != null" >
        table_device_guid,
      </if>
      <if test="record_time != null" >
        record_time,
      </if>
      <if test="air_Temperature != null" >
        air_Temperature,
      </if>
      <if test="air_Humidity != null" >
        air_Humidity,
      </if>
      <if test="substrate_Temperature != null" >
        substrate_Temperature,
      </if>
      <if test="substrate_Humidity != null" >
        substrate_Humidity,
      </if>
      <if test="substrate_PH != null" >
        substrate_PH,
      </if>
      <if test="carbon_Dioxide != null" >
        carbon_Dioxide,
      </if>
      <if test="illuminance != null" >
        illuminance,
      </if>
      <if test="substrate_Conductivity != null" >
        substrate_Conductivity,
      </if>
      <if test="ppfd != null" >
        ppfd,
      </if>
      <if test="liquid_PH != null" >
        liquid_PH,
      </if>
      <if test="lai != null" >
        lai,
      </if>
      <if test="liquid_Conductivity != null" >
        liquid_Conductivity,
      </if>
      <if test="liquid_DOC != null" >
        liquid_DOC,
      </if>
      <if test="substrate_DOC != null" >
        substrate_DOC,
      </if>
      <if test="reserve01 != null" >
        reserve01,
      </if>
      <if test="reserve02 != null" >
        reserve02,
      </if>
      <if test="account_id != null" >
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="record_guid != null" >
        #{record_guid,jdbcType=VARCHAR},
      </if>
      <if test="table_device_guid != null" >
        #{table_device_guid,jdbcType=VARCHAR},
      </if>
      <if test="record_time != null" >
        #{record_time,jdbcType=VARCHAR},
      </if>
      <if test="air_Temperature != null" >
        #{air_Temperature,jdbcType=VARCHAR},
      </if>
      <if test="air_Humidity != null" >
        #{air_Humidity,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Temperature != null" >
        #{substrate_Temperature,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Humidity != null" >
        #{substrate_Humidity,jdbcType=VARCHAR},
      </if>
      <if test="substrate_PH != null" >
        #{substrate_PH,jdbcType=VARCHAR},
      </if>
      <if test="carbon_Dioxide != null" >
        #{carbon_Dioxide,jdbcType=VARCHAR},
      </if>
      <if test="illuminance != null" >
        #{illuminance,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Conductivity != null" >
        #{substrate_Conductivity,jdbcType=VARCHAR},
      </if>
      <if test="ppfd != null" >
        #{ppfd,jdbcType=VARCHAR},
      </if>
      <if test="liquid_PH != null" >
        #{liquid_PH,jdbcType=VARCHAR},
      </if>
      <if test="lai != null" >
        #{lai,jdbcType=VARCHAR},
      </if>
      <if test="liquid_Conductivity != null" >
        #{liquid_Conductivity,jdbcType=VARCHAR},
      </if>
      <if test="liquid_DOC != null" >
        #{liquid_DOC,jdbcType=VARCHAR},
      </if>
      <if test="substrate_DOC != null" >
        #{substrate_DOC,jdbcType=VARCHAR},
      </if>
      <if test="reserve01 != null" >
        #{reserve01,jdbcType=VARCHAR},
      </if>
      <if test="reserve02 != null" >
        #{reserve02,jdbcType=VARCHAR},
      </if>
      <if test="account_id != null" >
        #{account_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iot.pojo.TableSensorRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update table_sensor_record
    <set >
      <if test="record_guid != null" >
        record_guid = #{record_guid,jdbcType=VARCHAR},
      </if>
      <if test="table_device_guid != null" >
        table_device_guid = #{table_device_guid,jdbcType=VARCHAR},
      </if>
      <if test="record_time != null" >
        record_time = #{record_time,jdbcType=VARCHAR},
      </if>
      <if test="air_Temperature != null" >
        air_Temperature = #{air_Temperature,jdbcType=VARCHAR},
      </if>
      <if test="air_Humidity != null" >
        air_Humidity = #{air_Humidity,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Temperature != null" >
        substrate_Temperature = #{substrate_Temperature,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Humidity != null" >
        substrate_Humidity = #{substrate_Humidity,jdbcType=VARCHAR},
      </if>
      <if test="substrate_PH != null" >
        substrate_PH = #{substrate_PH,jdbcType=VARCHAR},
      </if>
      <if test="carbon_Dioxide != null" >
        carbon_Dioxide = #{carbon_Dioxide,jdbcType=VARCHAR},
      </if>
      <if test="illuminance != null" >
        illuminance = #{illuminance,jdbcType=VARCHAR},
      </if>
      <if test="substrate_Conductivity != null" >
        substrate_Conductivity = #{substrate_Conductivity,jdbcType=VARCHAR},
      </if>
      <if test="ppfd != null" >
        ppfd = #{ppfd,jdbcType=VARCHAR},
      </if>
      <if test="liquid_PH != null" >
        liquid_PH = #{liquid_PH,jdbcType=VARCHAR},
      </if>
      <if test="lai != null" >
        lai = #{lai,jdbcType=VARCHAR},
      </if>
      <if test="liquid_Conductivity != null" >
        liquid_Conductivity = #{liquid_Conductivity,jdbcType=VARCHAR},
      </if>
      <if test="liquid_DOC != null" >
        liquid_DOC = #{liquid_DOC,jdbcType=VARCHAR},
      </if>
      <if test="substrate_DOC != null" >
        substrate_DOC = #{substrate_DOC,jdbcType=VARCHAR},
      </if>
      <if test="reserve01 != null" >
        reserve01 = #{reserve01,jdbcType=VARCHAR},
      </if>
      <if test="reserve02 != null" >
        reserve02 = #{reserve02,jdbcType=VARCHAR},
      </if>
      <if test="account_id != null" >
        account_id = #{account_id,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iot.pojo.TableSensorRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update table_sensor_record
    set record_guid = #{record_guid,jdbcType=VARCHAR},
    table_device_guid = #{table_device_guid,jdbcType=VARCHAR},
    record_time = #{record_time,jdbcType=VARCHAR},
    air_Temperature = #{air_Temperature,jdbcType=VARCHAR},
    air_Humidity = #{air_Humidity,jdbcType=VARCHAR},
    substrate_Temperature = #{substrate_Temperature,jdbcType=VARCHAR},
    substrate_Humidity = #{substrate_Humidity,jdbcType=VARCHAR},
    substrate_PH = #{substrate_PH,jdbcType=VARCHAR},
    carbon_Dioxide = #{carbon_Dioxide,jdbcType=VARCHAR},
    illuminance = #{illuminance,jdbcType=VARCHAR},
    substrate_Conductivity = #{substrate_Conductivity,jdbcType=VARCHAR},
    ppfd = #{ppfd,jdbcType=VARCHAR},
    liquid_PH = #{liquid_PH,jdbcType=VARCHAR},
    lai = #{lai,jdbcType=VARCHAR},
    liquid_Conductivity = #{liquid_Conductivity,jdbcType=VARCHAR},
    liquid_DOC = #{liquid_DOC,jdbcType=VARCHAR},
    substrate_DOC = #{substrate_DOC,jdbcType=VARCHAR},
    reserve01 = #{reserve01,jdbcType=VARCHAR},
    reserve02 = #{reserve02,jdbcType=VARCHAR},
    account_id = #{account_id,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>



  <select id="getSenorData" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from table_sensor_record
    where table_device_guid = #{table_device_guid,jdbcType=CHAR} AND account_id = #{account_id,jdbcType=CHAR} AND
    record_time between STR_TO_DATE(#{start_time,jdbcType=CHAR},'%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{end_time,jdbcType=CHAR},'%Y-%m-%d %H:%i:%s')

  </select>

  <select id="getNowSenorData" parameterType="map" resultMap="BaseResultMap">

    SELECT  <include refid="Base_Column_List" />
    FROM table_sensor_record WHERE  record_time=(
    SELECT  max(record_time)  FROM table_sensor_record  WHERE table_device_guid=#{table_device_guid,jdbcType=CHAR} AND account_id=#{account_id,jdbcType=CHAR}
    )

  </select>

  <select id="getNowSenorDataMinTime" parameterType="map" resultMap="BaseResultMap">

    SELECT  record_time
    FROM table_sensor_record WHERE  record_time=(
    SELECT  min(record_time)  FROM table_sensor_record  WHERE table_device_guid=#{table_device_guid,jdbcType=CHAR} AND account_id=#{account_id,jdbcType=CHAR}
    )

  </select>



  <insert id="insertMany" parameterType="java.util.List">

    insert into table_sensor_record (id,
    record_guid,
    table_device_guid,
    record_time,
    air_Temperature,
    air_Humidity,
    substrate_Temperature,
    substrate_Humidity,
    substrate_PH,
    carbon_Dioxide,
    illuminance,
    substrate_Conductivity,
    ppfd,
    liquid_PH,
    lai,
    liquid_Conductivity,
    liquid_DOC,
    substrate_DOC,
    reserve01,
    reserve02,
    account_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id},#{item.record_guid},#{item.table_device_guid},#{item.record_time},#{item.air_Temperature},#{item.air_Humidity},
      #{item.substrate_Temperature},
      #{item.substrate_Humidity},
      #{item.substrate_PH},
      #{item.carbon_Dioxide},
      #{item.illuminance},
      #{item.substrate_Conductivity},
      #{item.ppfd},
      #{item.liquid_PH},
      #{item.lai},
      #{item.liquid_Conductivity},
      #{item.liquid_DOC},
      #{item.substrate_DOC},
      #{item.reserve01},
      #{item.reserve02},
      #{item.account_id})
    </foreach>
  </insert>

  <select id="selectLimitData" parameterType="map" resultMap="BaseResultMap">
    select
    id,record_time
    from table_sensor_record
    limit #{num},#{size}
  </select>




  <select id="getAllRecordNumber"  parameterType="map" resultType="java.lang.Integer">
    select count(*) from table_sensor_record
    WHERE record_time<![CDATA[  >=  ]]>#{start} AND record_time <![CDATA[  <=  ]]> #{end}
  </select>

  <select id="selectDailyData" parameterType="map" resultMap="BaseResultMap">
    select
    *
    from table_sensor_record
    WHERE record_time<![CDATA[  >=  ]]>#{start} AND record_time <![CDATA[  <=  ]]> #{end}
    limit ${num},${size}
  </select>


  <!--<update id="updateRecordTime" parameterType="java.util.List" >-->

    <!--<foreach collection="list" item="item" index="index" open="" close="" separator=";">-->
      <!--UPDATE table_sensor_record-->
      <!--<set>-->
        <!--record_time=#{item.record_time}-->
      <!--</set>-->
      <!--WHERE id = #{item.id}-->
    <!--</foreach>-->
  <!--</update>-->


  <insert id="updateRecordTime" parameterType="java.util.List" >

    insert into temp (id,
    record_guid,
    table_device_guid,
    record_time,
    air_Temperature,
    air_Humidity,
    substrate_Temperature,
    substrate_Humidity,
    substrate_PH,
    carbon_Dioxide,
    illuminance,
    substrate_Conductivity,
    ppfd,
    liquid_PH,
    lai,
    liquid_Conductivity,
    liquid_DOC,
    substrate_DOC,
    reserve01,
    reserve02,
    account_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id},#{item.record_guid},#{item.table_device_guid},#{item.record_time},#{item.air_Temperature},#{item.air_Humidity},
      #{item.substrate_Temperature},
      #{item.substrate_Humidity},
      #{item.substrate_PH},
      #{item.carbon_Dioxide},
      #{item.illuminance},
      #{item.substrate_Conductivity},
      #{item.ppfd},
      #{item.liquid_PH},
      #{item.lai},
      #{item.liquid_Conductivity},
      #{item.liquid_DOC},
      #{item.substrate_DOC},
      #{item.reserve01},
      #{item.reserve02},
      #{item.account_id})
    </foreach>
  </insert>




</mapper>